/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VaultNFTv2,
  VaultNFTv2Interface,
} from "../../../contracts/MyVaultV2.sol/VaultNFTv2";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
      {
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
      {
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "name",
        type: "string",
      },
      {
        name: "symbol",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016a5380380620016a5833981018060405260408110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b505092919060200180516401000000008111156200009c57600080fd5b82016020810184811115620000b057600080fd5b8151640100000000811182820187101715620000cb57600080fd5b505092919050505081818181620000ef6301ffc9a760e01b6200016f60201b60201c565b620001076380ac58cd60e01b6200016f60201b60201c565b6200011f63780e9d6360e01b6200016f60201b60201c565b8151620001349060099060208501906200023e565b5080516200014a90600a9060208401906200023e565b5062000163635b5e139f60e01b6200016f60201b60201c565b505050505050620002e3565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200020157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028157805160ff1916838001178555620002b1565b82800160010185558215620002b1579182015b82811115620002b157825182559160200191906001019062000294565b50620002bf929150620002c3565b5090565b620002e091905b80821115620002bf5760008155600101620002ca565b90565b6113b280620002f36000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80634f6ccce7116100b257806395d89b4111610081578063b88d4fde11610066578063b88d4fde1461038f578063c87b56dd14610455578063e985e9c5146104725761011b565b806395d89b4114610359578063a22cb465146103615761011b565b80634f6ccce7146102f15780636352211e1461030e5780636c0360eb1461032b57806370a08231146103335761011b565b806318160ddd116100ee57806318160ddd1461023f57806323b872dd146102595780632f745c591461028f57806342842e0e146102bb5761011b565b806301ffc9a71461012057806306fdde031461015b578063081812fc146101d8578063095ea7b314610211575b600080fd5b6101476004803603602081101561013657600080fd5b50356001600160e01b0319166104a0565b604080519115158252519081900360200190f35b6101636104c3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019d578181015183820152602001610185565b50505050905090810190601f1680156101ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f5600480360360208110156101ee57600080fd5b5035610559565b604080516001600160a01b039092168252519081900360200190f35b61023d6004803603604081101561022757600080fd5b506001600160a01b0381351690602001356105c0565b005b610247610702565b60408051918252519081900360200190f35b61023d6004803603606081101561026f57600080fd5b506001600160a01b03813581169160208101359091169060400135610708565b610247600480360360408110156102a557600080fd5b506001600160a01b038135169060200135610769565b61023d600480360360608110156102d157600080fd5b506001600160a01b038135811691602081013590911690604001356107eb565b6102476004803603602081101561030757600080fd5b5035610806565b6101f56004803603602081101561032457600080fd5b5035610870565b6101636108cf565b6102476004803603602081101561034957600080fd5b50356001600160a01b0316610930565b61016361099d565b61023d6004803603604081101561037757600080fd5b506001600160a01b03813516906020013515156109fe565b61023d600480360360808110156103a557600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103e057600080fd5b8201836020820111156103f257600080fd5b8035906020019184600183028401116401000000008311171561041457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b00945050505050565b6101636004803603602081101561046b57600080fd5b5035610b63565b6101476004803603604081101561048857600080fd5b506001600160a01b0381358116916020013516610d34565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050905090565b600061056482610d62565b15156105a457604051600160e51b62461bcd02815260040180806020018281038252602c8152602001806112ae602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b60006105cb82610870565b90506001600160a01b03838116908216141561061b57604051600160e51b62461bcd0281526004018080602001828103825260218152602001806113096021913960400191505060405180910390fd5b806001600160a01b031661062d610d7f565b6001600160a01b0316148061064e575061064e81610649610d7f565b610d34565b151561068e57604051600160e51b62461bcd0281526004018080602001828103825260388152602001806112236038913960400191505060405180910390fd5b60008281526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b610719610713610d7f565b82610d83565b151561075957604051600160e51b62461bcd02815260040180806020018281038252603181526020018061132a6031913960400191505060405180910390fd5b610764838383610e2c565b505050565b600061077483610930565b82106107b457604051600160e51b62461bcd02815260040180806020018281038252602b81526020018061119a602b913960400191505060405180910390fd5b6001600160a01b03831660009081526005602052604090208054839081106107d857fe5b9060005260206000200154905092915050565b61076483838360405180602001604052806000815250610b00565b6000610810610702565b821061085057604051600160e51b62461bcd02815260040180806020018281038252602c81526020018061135b602c913960400191505060405180910390fd5b600780548390811061085e57fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b03168015156108c957604051600160e51b62461bcd0281526004018080602001828103825260298152602001806112856029913960400191505060405180910390fd5b92915050565b600b8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054f5780601f106105245761010080835404028352916020019161054f565b60006001600160a01b038216151561097c57604051600160e51b62461bcd02815260040180806020018281038252602a81526020018061125b602a913960400191505060405180910390fd5b6001600160a01b03821660009081526003602052604090206108c990610e7c565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561054f5780601f106105245761010080835404028352916020019161054f565b610a06610d7f565b6001600160a01b0383811691161415610a695760408051600160e51b62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610a76610d7f565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610aba610d7f565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610b11610b0b610d7f565b83610d83565b1515610b5157604051600160e51b62461bcd02815260040180806020018281038252603181526020018061132a6031913960400191505060405180910390fd5b610b5d84848484610e80565b50505050565b6060610b6e82610d62565b1515610bae57604051600160e51b62461bcd02815260040180806020018281038252602f8152602001806112da602f913960400191505060405180910390fd5b6000828152600c602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610c435780601f10610c1857610100808354040283529160200191610c43565b820191906000526020600020905b815481529060010190602001808311610c2657829003601f168201915b50505050509050805160001415610c6a5750506040805160208101909152600081526104be565b600b816040516020018083805460018160011615610100020316600290048015610ccb5780601f10610ca9576101008083540402835291820191610ccb565b820191906000526020600020905b815481529060010190602001808311610cb7575b5050825160208401908083835b60208310610cf75780518252601f199092019160209182019101610cd8565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506104be565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b6000610d8e82610d62565b1515610dce57604051600160e51b62461bcd02815260040180806020018281038252602c8152602001806111f7602c913960400191505060405180910390fd5b6000610dd983610870565b9050806001600160a01b0316846001600160a01b03161480610e145750836001600160a01b0316610e0984610559565b6001600160a01b0316145b80610e245750610e248185610d34565b949350505050565b60408051600160e51b62461bcd02815260206004820152601260248201527f7472616e736665723a2064697361626c65640000000000000000000000000000604482015290519081900360640190fd5b5490565b610e8b848484610e2c565b610e9784848484610ed7565b1515610b5d57604051600160e51b62461bcd0281526004018080602001828103825260328152602001806111c56032913960400191505060405180910390fd5b6000610eeb846001600160a01b0316611160565b1515610ef957506001610e24565b600060606001600160a01b0386167f150b7a0200000000000000000000000000000000000000000000000000000000610f30610d7f565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610fa9578181015183820152602001610f91565b50505050905090810190601f168015610fd65780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106110535780518252601f199092019160209182019101611034565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146110b5576040519150601f19603f3d011682016040523d82523d6000602084013e6110ba565b606091505b5091509150811515611110578051156110d65780518082602001fd5b604051600160e51b62461bcd0281526004018080602001828103825260328152602001806111c56032913960400191505060405180910390fd5b600081806020019051602081101561112757600080fd5b50516001600160e01b0319167f150b7a0200000000000000000000000000000000000000000000000000000000149350610e2492505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610e2457505015159291505056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a165627a7a7230582090847ffd8364c10d5a7dcda4f253842f1a37605f1f268b72b36bd53756aeb3910029";

type VaultNFTv2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultNFTv2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultNFTv2__factory extends ContractFactory {
  constructor(...args: VaultNFTv2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultNFTv2> {
    return super.deploy(name, symbol, overrides || {}) as Promise<VaultNFTv2>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): VaultNFTv2 {
    return super.attach(address) as VaultNFTv2;
  }
  override connect(signer: Signer): VaultNFTv2__factory {
    return super.connect(signer) as VaultNFTv2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultNFTv2Interface {
    return new utils.Interface(_abi) as VaultNFTv2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultNFTv2 {
    return new Contract(address, _abi, signerOrProvider) as VaultNFTv2;
  }
}
