/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Farm,
  FarmInterface,
} from "../../../contracts/StakingRewards.sol/Farm";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
      {
        internalType: "uint16",
        name: "_depositFeeBP",
        type: "uint16",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "deposited",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paidOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accERC20PerShare",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "depositFeeBP",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600355600060075534801561001a57600080fd5b50604051611bb4380380611bb48339818101604052608081101561003d57600080fd5b5080516020820151604083015160609093015191929091600061005e6100ee565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060018055600280546001600160a01b039586166001600160a01b0319918216179091556004939093556008829055600991909155600a80549190931691161790556100f2565b3390565b611ab3806101016000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c8063630b5ba1116100ee5780638da5cb5b11610097578063ca1d209d11610071578063ca1d209d146103eb578063e2bbb15814610408578063e4c75c271461042b578063f2fde38b14610457576101a3565b80638da5cb5b1461037257806393f1a40b1461037a578063a2383106146103bf576101a3565b8063785e9e86116100c8578063785e9e861461033c5780638705fcd4146103445780638ae39cac1461036a576101a3565b8063630b5ba11461030157806364482f7914610309578063715018a614610334576101a3565b8063441a3e701161015057806351eb05a61161012a57806351eb05a6146102bf5780635312ea8e146102dc5780635c76ca2d146102f9576101a3565b8063441a3e701461025457806347a55b7c1461027957806348cd4cb1146102b7576101a3565b806317caf6f11161018157806317caf6f1146102205780633f90916a146102285780634127535814610230576101a3565b8063081e3eda146101a8578063083c6323146101c25780631526fe27146101ca575b600080fd5b6101b061047d565b60408051918252519081900360200190f35b6101b0610484565b6101e7600480360360208110156101e057600080fd5b503561048a565b604080516001600160a01b039096168652602086019490945284840192909252606084015261ffff166080830152519081900360a00190f35b6101b06104d6565b6101b06104dc565b610238610531565b604080516001600160a01b039092168252519081900360200190f35b6102776004803603604081101561026a57600080fd5b5080359060200135610540565b005b6102776004803603608081101561028f57600080fd5b5080359060208101356001600160a01b03169060408101351515906060013561ffff166106e6565b6101b0610917565b610277600480360360208110156102d557600080fd5b503561091d565b610277600480360360208110156102f257600080fd5b5035610a6e565b6101b0610b6b565b610277610b71565b6102776004803603606081101561031f57600080fd5b50803590602081013590604001351515610b94565b610277610c81565b610238610d4c565b6102776004803603602081101561035a57600080fd5b50356001600160a01b0316610d5b565b6101b0610de9565b610238610def565b6103a66004803603604081101561039057600080fd5b50803590602001356001600160a01b0316610dfe565b6040805192835260208301919091528051918290030190f35b6101b0600480360360408110156103d557600080fd5b50803590602001356001600160a01b0316610e22565b6102776004803603602081101561040157600080fd5b5035610e4c565b6102776004803603604081101561041e57600080fd5b5080359060200135610f32565b6101b06004803603604081101561044157600080fd5b50803590602001356001600160a01b0316611108565b6102776004803603602081101561046d57600080fd5b50356001600160a01b0316611287565b6005545b90565b60095481565b6005818154811061049757fe5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909161ffff1685565b60075481565b600060085443116104ef57506000610481565b6000600954431061050257600954610504565b435b905061052b60035461052560085484036004546113a890919063ffffffff16565b90611408565b91505090565b600a546001600160a01b031681565b60026001541415610598576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026001819055506000600583815481106105af57fe5b6000918252602080832086845260068252604080852033865290925292208054600590920290920192508311156106175760405162461bcd60e51b815260040180806020018281038252602a815260200180611a2a602a913960400191505060405180910390fd5b6106208461091d565b6000610654826001015461052564e8d4a5100061064e876003015487600001546113a890919063ffffffff16565b90611465565b905061066033826114cc565b815461066c9085611408565b80835560038401546106899164e8d4a510009161064e91906113a8565b600183015582546106a4906001600160a01b0316338661155a565b604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505060018055505050565b6106ee6115c6565b6001600160a01b03166106ff610def565b6001600160a01b03161461075a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6127108161ffff16111561079f5760405162461bcd60e51b81526004018080602001828103825260258152602001806119766025913960400191505060405180910390fd5b81156107ad576107ad610b71565b600060085443116107c0576008546107c2565b435b6007549091506107d290866115ca565b6007556040805160a0810182526001600160a01b0395861681526020810196875290810191825260006060820181815261ffff94851660808401908152600580546001810182559381905293517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db093909402928301805473ffffffffffffffffffffffffffffffffffffffff1916949098169390931790965595517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db187015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db286015592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db385015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4909301805461ffff19169390921692909217905550565b60085481565b60006005828154811061092c57fe5b906000526020600020906005020190506000600954431061094f57600954610951565b435b905081600201548111610965575050610a6b565b8154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156109af57600080fd5b505afa1580156109c3573d6000803e3d6000fd5b505050506040513d60208110156109d957600080fd5b50519050806109ee5750600290910155610a6b565b6000610a0784600201548461140890919063ffffffff16565b90506000610a3460075461064e8760010154610a2e600454876113a890919063ffffffff16565b906113a8565b9050610a57610a4c8461064e8464e8d4a510006113a8565b6003870154906115ca565b600386015550504360029093019290925550505b50565b60026001541415610ac6576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600181905550600060058281548110610add57fe5b60009182526020808320858452600682526040808520338087529352909320805460059093029093018054909450610b22926001600160a01b0391909116919061155a565b80546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a3600080825560019182015580555050565b60035481565b60055460005b81811015610b9057610b888161091d565b600101610b77565b5050565b610b9c6115c6565b6001600160a01b0316610bad610def565b6001600160a01b031614610c08576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b8015610c1657610c16610b71565b610c5382610c4d60058681548110610c2a57fe5b90600052602060002090600502016001015460075461140890919063ffffffff16565b906115ca565b6007819055508160058481548110610c6757fe5b906000526020600020906005020160010181905550505050565b610c896115c6565b6001600160a01b0316610c9a610def565b6001600160a01b031614610cf5576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6002546001600160a01b031681565b600a546001600160a01b03163314610dba576040805162461bcd60e51b815260206004820152601860248201527f736574466565416464726573733a20464f5242494444454e0000000000000000604482015290519081900360640190fd5b600a805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60045481565b6000546001600160a01b031690565b60066020908152600092835260408084209091529082529020805460019091015482565b60008281526006602090815260408083206001600160a01b03851684529091529020545b92915050565b610e546115c6565b6001600160a01b0316610e65610def565b6001600160a01b031614610ec0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6009544310610f005760405162461bcd60e51b8152600401808060200182810382526022815260200180611a086022913960400191505060405180910390fd5b600254610f18906001600160a01b0316333084611624565b600454610f26908290611465565b60098054909101905550565b60026001541415610f8a576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600181905550600060058381548110610fa157fe5b60009182526020808320868452600682526040808520338652909252922060059091029091019150610fd28461091d565b805415611015576000611007826001015461052564e8d4a5100061064e876003015487600001546113a890919063ffffffff16565b905061101333826114cc565b505b82156110a7578154611032906001600160a01b0316333086611624565b600482015461ffff161561109857600482015460009061105f906127109061064e90879061ffff166113a8565b600a54845491925061107e916001600160a01b0390811691168361155a565b815461109090829061052590876115ca565b8255506110a7565b80546110a490846115ca565b81555b600382015481546110c29164e8d4a510009161064e916113a8565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050600180555050565b6000806005848154811061111857fe5b600091825260208083208784526006825260408085206001600160a01b0389811687529084528186206005959095029092016003810154815483516370a0823160e01b815230600482015293519298509596909590949316926370a082319260248082019391829003018186803b15801561119257600080fd5b505afa1580156111a6573d6000803e3d6000fd5b505050506040513d60208110156111bc57600080fd5b50516002850154909150431180156111d357508015155b1561125457600060095443106111eb576009546111ed565b435b9050600061120886600201548361140890919063ffffffff16565b9050600061122f60075461064e8960010154610a2e600454876113a890919063ffffffff16565b905061124e6112478561064e8464e8d4a510006113a8565b86906115ca565b94505050505b61127c836001015461052564e8d4a5100061064e8688600001546113a890919063ffffffff16565b979650505050505050565b61128f6115c6565b6001600160a01b03166112a0610def565b6001600160a01b0316146112fb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166113405760405162461bcd60e51b815260040180806020018281038252602681526020018061199b6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000826113b757506000610e46565b828202828482816113c457fe5b04146114015760405162461bcd60e51b81526004018080602001828103825260218152602001806119e76021913960400191505060405180910390fd5b9392505050565b60008282111561145f576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008082116114bb576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816114c457fe5b049392505050565b6002546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561152257600080fd5b505af1158015611536573d6000803e3d6000fd5b505050506040513d602081101561154c57600080fd5b505060038054909101905550565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526115c19084906116b2565b505050565b3390565b600082820183811015611401576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526116ac9085906116b2565b50505050565b6060611707826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117639092919063ffffffff16565b8051909150156115c15780806020019051602081101561172657600080fd5b50516115c15760405162461bcd60e51b815260040180806020018281038252602a815260200180611a54602a913960400191505060405180910390fd5b6060611772848460008561177a565b949350505050565b6060824710156117bb5760405162461bcd60e51b81526004018080602001828103825260268152602001806119c16026913960400191505060405180910390fd5b6117c4856118cb565b611815576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106118545780518252601f199092019160209182019101611835565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146118b6576040519150601f19603f3d011682016040523d82523d6000602084013e6118bb565b606091505b509150915061127c8282866118d1565b3b151590565b606083156118e0575081611401565b8251156118f05782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561193a578181015183820152602001611922565b50505050905090810190601f1680156119675780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe6164643a20696e76616c6964206465706f7369742066656520626173697320706f696e74734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7766756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73656477697468647261773a2063616e2774207769746864726177206d6f7265207468616e206465706f7369745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220c3aea85962b632d23e58ca8c26e450ec00a2c4e5922a72b8858105656e509fb164736f6c634300060c0033";

type FarmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FarmConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Farm__factory extends ContractFactory {
  constructor(...args: FarmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc20: string,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _feeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Farm> {
    return super.deploy(
      _erc20,
      _rewardPerBlock,
      _startBlock,
      _feeAddress,
      overrides || {}
    ) as Promise<Farm>;
  }
  override getDeployTransaction(
    _erc20: string,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _feeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc20,
      _rewardPerBlock,
      _startBlock,
      _feeAddress,
      overrides || {}
    );
  }
  override attach(address: string): Farm {
    return super.attach(address) as Farm;
  }
  override connect(signer: Signer): Farm__factory {
    return super.connect(signer) as Farm__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FarmInterface {
    return new utils.Interface(_abi) as FarmInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Farm {
    return new Contract(address, _abi, signerOrProvider) as Farm;
  }
}
