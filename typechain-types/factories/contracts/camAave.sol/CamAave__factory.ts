/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CamAave,
  CamAaveInterface,
} from "../../../contracts/camAave.sol/CamAave";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "amToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "AaveContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "LENDING_POOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "Token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "aave",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "claimAaveRewards",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "depositFeeBP",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "harvestMaticIntoToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "leave",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "uni",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint16",
        name: "_depositFee",
        type: "uint16",
      },
    ],
    name: "updateDepositFee",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "updateOperator",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "updateUniV2Router",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "wMatic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024ec380380620024ec833981810160405260a08110156200003757600080fd5b815160208301516040808501805191519395929483019291846401000000008211156200006357600080fd5b9083019060208201858111156200007957600080fd5b82516401000000008111828201881017156200009457600080fd5b82525081516020918201929091019080838360005b83811015620000c3578181015183820152602001620000a9565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b9083019060208201858111156200012b57600080fd5b82516401000000008111828201881017156200014657600080fd5b82525081516020918201929091019080838360005b83811015620001755781810151838201526020016200015b565b50505050905090810190601f168015620001a35780820380516001836020036101000a031916815260200191505b50604052602090810151855190935085925084918491620001cb9160039190860190620002e3565b508151620001e1906004906020850190620002e3565b50600580546001600160a01b03998a1661010002610100600160a81b031960ff90941660ff1990921691909117929092169190911790555050600b8054949095166001600160a01b031994851617909455505060068054821673357d51124f59836ded84c8a1730d72b749d8bc23179055600780548216730d500b1d8e8ef31e21c99d1db9a6444d3adf1270179055600c805460088054841673a5e0829caced8ffdd4de3c43696c57f7d7a678ff1790556009805484167386fe8d6d4c8a007353617587988552b6921514cb17905561ffff60a01b19908316737ceb23fd6bc0add59e62ac25578270cff1b9f61917169055600a805490911690555062000388565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200032657805160ff191683800117855562000356565b8280016001018555821562000356579182015b828111156200035657825182559160200191906001019062000339565b506200036492915062000368565b5090565b6200038591905b808211156200036457600081556001016200036f565b90565b61215480620003986000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806367dfd4c911610104578063a457c2d7116100a2578063b4dcfc7711610071578063b4dcfc77146104fb578063c241267614610503578063dd62ed3e1461050b578063edc9af9514610539576101cf565b8063a457c2d714610460578063a59f3e0c1461048c578063a9059cbb146104a9578063ac7475ed146104d5576101cf565b80637f51bb1f116100de5780637f51bb1f14610409578063819faf7b1461042f5780638aab7d1c1461043757806395d89b4114610458576101cf565b806367dfd4c9146103be57806370a08231146103db57806372ff2f7f14610401576101cf565b806339509351116101715780634e33df861161014b5780634e33df861461036957806354747a701461038f578063570ca735146103ae57806361d027b3146103b6576101cf565b806339509351146103115780633c81fdb41461033d5780633fc8cef314610361576101cf565b806319f7a841116101ad57806319f7a841146102ab57806323b872dd146102b5578063313ce567146102eb578063377d7c9f14610309576101cf565b806306fdde03146101d4578063095ea7b31461025157806318160ddd14610291575b600080fd5b6101dc610541565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102165781810151838201526020016101fe565b50505050905090810190601f1680156102435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561026757600080fd5b506001600160a01b0381351690602001356105d7565b604080519115158252519081900360200190f35b6102996105f5565b60408051918252519081900360200190f35b6102b36105fb565b005b61027d600480360360608110156102cb57600080fd5b506001600160a01b03813581169160208101359091169060400135610a41565b6102f3610ace565b6040805160ff9092168252519081900360200190f35b6102b3610ad7565b61027d6004803603604081101561032757600080fd5b506001600160a01b038135169060200135610d6b565b610345610dbf565b604080516001600160a01b039092168252519081900360200190f35b610345610dce565b6102b36004803603602081101561037f57600080fd5b50356001600160a01b0316610ddd565b610397610e6b565b6040805161ffff9092168252519081900360200190f35b610345610e7c565b610345610e8b565b6102b3600480360360208110156103d457600080fd5b5035610e9a565b610299600480360360208110156103f157600080fd5b50356001600160a01b0316611013565b61034561102e565b6102b36004803603602081101561041f57600080fd5b50356001600160a01b031661103d565b6103456110cb565b6102b36004803603602081101561044d57600080fd5b503561ffff166110da565b6101dc611175565b61027d6004803603604081101561047657600080fd5b506001600160a01b0381351690602001356111d6565b6102b3600480360360208110156104a257600080fd5b5035611244565b61027d600480360360408110156104bf57600080fd5b506001600160a01b038135169060200135611492565b6102b3600480360360208110156104eb57600080fd5b50356001600160a01b03166114a6565b610345611534565b61034561154c565b6102996004803603604081101561052157600080fd5b506001600160a01b0381358116916020013516611560565b61034561158b565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b5050505050905090565b60006105eb6105e461159a565b848461159e565b5060015b92915050565b60025490565b600a546001600160a01b0316158061061d5750600a546001600160a01b031633145b61066e576040805162461bcd60e51b815260206004820152601960248201527f6f6e6c794f70657261746f723a206e6f7420616c6c6f77656400000000000000604482015290519081900360640190fd5b600754604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156106b957600080fd5b505afa1580156106cd573d6000803e3d6000fd5b505050506040513d60208110156106e357600080fd5b505190506002811115610a3e5760408051600380825260808201909252606091602082018380388339505060075482519293506001600160a01b03169183915060009061072c57fe5b6001600160a01b039283166020918202929092010152600c5482519116908290600190811061075757fe5b6001600160a01b039283166020918202929092010152600b5482519116908290600290811061078257fe5b6001600160a01b0392831660209182029290920101526008546007546107b4929081169116600063ffffffff61168a16565b6008546007546107d7916001600160a01b0391821691168463ffffffff61168a16565b6008546001600160a01b03166338ed173983600084306107ff4261070863ffffffff6117e416565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610878578181015183820152602001610860565b505050509050019650505050505050600060405180830381600087803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b5050600b54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d602081101561093057600080fd5b5051600b54909150610967906001600160a01b0316738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf600063ffffffff61168a16565b600b54610998906001600160a01b0316738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf8363ffffffff61168a16565b600b54604080517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b039092166004830152602482018390523060448301526000606483018190529051738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf9263e8eda9df92608480830193919282900301818387803b158015610a2357600080fd5b505af1158015610a37573d6000803e3d6000fd5b5050505050505b50565b6000610a4e848484611845565b610ac484610a5a61159a565b610abf85604051806060016040528060288152602001612009602891396001600160a01b038a16600090815260016020526040812090610a9861159a565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6119a116565b61159e565b5060019392505050565b60055460ff1690565b600a546001600160a01b03161580610af95750600a546001600160a01b031633145b610b4a576040805162461bcd60e51b815260206004820152601960248201527f6f6e6c794f70657261746f723a206e6f7420616c6c6f77656400000000000000604482015290519081900360640190fd5b60408051600180825281830190925260609160208083019080388339019050509050600560019054906101000a90046001600160a01b031681600081518110610b8f57fe5b6001600160a01b03928316602091820292909201810191909152600654604080517f8b599f260000000000000000000000000000000000000000000000000000000081523060248201819052600482019283528651604483015286516000969490941694638b599f269488949293839260649091019186820191028083838c5b83811015610c27578181015183820152602001610c0f565b50505050905001935050505060206040518083038186803b158015610c4b57600080fd5b505afa158015610c5f573d6000803e3d6000fd5b505050506040513d6020811015610c7557600080fd5b505190506002811115610d67576006546040517f3111e7b30000000000000000000000000000000000000000000000000000000081526024810183905230604482018190526060600483019081528551606484015285516001600160a01b0390941693633111e7b393879387939092909182916084909101906020808801910280838360005b83811015610d13578181015183820152602001610cfb565b50505050905001945050505050602060405180830381600087803b158015610d3a57600080fd5b505af1158015610d4e573d6000803e3d6000fd5b505050506040513d6020811015610d6457600080fd5b50505b5050565b60006105eb610d7861159a565b84610abf8560016000610d8961159a565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff6117e416565b6007546001600160a01b031681565b600c546001600160a01b031681565b6009546001600160a01b03163314610e3c576040805162461bcd60e51b815260206004820152601f60248201527f757064617465556e695632526f757465723a206e6f7420616c6c6f7765642e00604482015290519081900360640190fd5b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600c54600160a01b900461ffff1681565b600a546001600160a01b031681565b6009546001600160a01b031681565b8015610a3e576000610eaa6105f5565b90506000610f6582610f59600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610f2057600080fd5b505afa158015610f34573d6000803e3d6000fd5b505050506040513d6020811015610f4a57600080fd5b5051869063ffffffff611a3816565b9063ffffffff611a9116565b9050610f713384611ad3565b600554604080517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810184905290516101009092046001600160a01b03169163a9059cbb916044808201926020929091908290030181600087803b158015610fe257600080fd5b505af1158015610ff6573d6000803e3d6000fd5b505050506040513d602081101561100c57600080fd5b5050505050565b6001600160a01b031660009081526020819052604090205490565b6006546001600160a01b031681565b6009546001600160a01b0316331461109c576040805162461bcd60e51b815260206004820152601c60248201527f75706461746554726561737572793a206e6f7420616c6c6f7765642e00000000604482015290519081900360640190fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b031681565b6009546001600160a01b03163314611139576040805162461bcd60e51b815260206004820152601e60248201527f7570646174654465706f7369744665653a206e6f7420616c6c6f7765642e0000604482015290519081900360640190fd5b600c805461ffff909216600160a01b027fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105cd5780601f106105a2576101008083540402835291602001916105cd565b60006105eb6111e361159a565b84610abf856040518060600160405280602581526020016120fb602591396001600061120d61159a565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6119a116565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561129457600080fd5b505afa1580156112a8573d6000803e3d6000fd5b505050506040513d60208110156112be57600080fd5b5051905060006112cc6105f5565b600554604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810187905290519293506101009091046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b15801561134657600080fd5b505af115801561135a573d6000803e3d6000fd5b505050506040513d602081101561137057600080fd5b505080158061137d575081155b1561140057600c54600160a01b900461ffff16156113f157600c546000906113b99061271090610f59908790600160a01b900461ffff16611a38565b6009549091506113d2906001600160a01b031682611bcf565b6113eb336113e6868463ffffffff611cbf16565b611bcf565b506113fb565b6113fb3384611bcf565b61148d565b600061141683610f59868563ffffffff611a3816565b600c54909150600160a01b900461ffff161561148357600c546000906114509061271090610f59908590600160a01b900461ffff16611a38565b600954909150611469906001600160a01b031682611bcf565b61147d336113e6848463ffffffff611cbf16565b50610d64565b610d643382611bcf565b505050565b60006105eb61149f61159a565b8484611845565b6009546001600160a01b03163314611505576040805162461bcd60e51b815260206004820152601c60248201527f7570646174654f70657261746f723a206e6f7420616c6c6f7765642e00000000604482015290519081900360640190fd5b600a805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf81565b60055461010090046001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6008546001600160a01b031681565b3390565b6001600160a01b0383166115e35760405162461bcd60e51b81526004018080602001828103825260248152602001806120776024913960400191505060405180910390fd5b6001600160a01b0382166116285760405162461bcd60e51b8152600401808060200182810382526022815260200180611fa06022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8015806117295750604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b1580156116fb57600080fd5b505afa15801561170f573d6000803e3d6000fd5b505050506040513d602081101561172557600080fd5b5051155b6117645760405162461bcd60e51b81526004018080602001828103825260368152602001806120c56036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905261148d908490611d01565b60008282018381101561183e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03831661188a5760405162461bcd60e51b81526004018080602001828103825260258152602001806120526025913960400191505060405180910390fd5b6001600160a01b0382166118cf5760405162461bcd60e51b8152600401808060200182810382526023815260200180611f5b6023913960400191505060405180910390fd5b61191281604051806060016040528060268152602001611fc2602691396001600160a01b038616600090815260208190526040902054919063ffffffff6119a116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054611947908263ffffffff6117e416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611a305760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119f55781810151838201526020016119dd565b50505050905090810190601f168015611a225780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082611a47575060006105ef565b82820282848281611a5457fe5b041461183e5760405162461bcd60e51b8152600401808060200182810382526021815260200180611fe86021913960400191505060405180910390fd5b600061183e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611eb9565b6001600160a01b038216611b185760405162461bcd60e51b81526004018080602001828103825260218152602001806120316021913960400191505060405180910390fd5b611b5b81604051806060016040528060228152602001611f7e602291396001600160a01b038516600090815260208190526040902054919063ffffffff6119a116565b6001600160a01b038316600090815260208190526040902055600254611b87908263ffffffff611cbf16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b038216611c2a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254611c3d908263ffffffff6117e416565b6002556001600160a01b038216600090815260208190526040902054611c69908263ffffffff6117e416565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600061183e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506119a1565b611d13826001600160a01b0316611f1e565b611d64576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611da25780518252601f199092019160209182019101611d83565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611e04576040519150601f19603f3d011682016040523d82523d6000602084013e611e09565b606091505b509150915081611e60576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610d6457808060200190516020811015611e7c57600080fd5b5051610d645760405162461bcd60e51b815260040180806020018281038252602a81526020018061209b602a913960400191505060405180910390fd5b60008183611f085760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156119f55781810151838201526020016119dd565b506000838581611f1457fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611f5257508115155b94935050505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820d96f4a9319523d646098e295d8b46922d82fe6f8cd41ea5d87cabf1e31f4ee4964736f6c63430005100032";

type CamAaveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CamAaveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CamAave__factory extends ContractFactory {
  constructor(...args: CamAaveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    amToken: string,
    underlying: string,
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CamAave> {
    return super.deploy(
      amToken,
      underlying,
      name,
      symbol,
      decimals,
      overrides || {}
    ) as Promise<CamAave>;
  }
  override getDeployTransaction(
    amToken: string,
    underlying: string,
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      amToken,
      underlying,
      name,
      symbol,
      decimals,
      overrides || {}
    );
  }
  override attach(address: string): CamAave {
    return super.attach(address) as CamAave;
  }
  override connect(signer: Signer): CamAave__factory {
    return super.connect(signer) as CamAave__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CamAaveInterface {
    return new utils.Interface(_abi) as CamAaveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CamAave {
    return new Contract(address, _abi, signerOrProvider) as CamAave;
  }
}
