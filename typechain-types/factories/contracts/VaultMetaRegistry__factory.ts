/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VaultMetaRegistry,
  VaultMetaRegistryInterface,
} from "../../contracts/VaultMetaRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "vault_address",
        type: "address",
      },
    ],
    name: "getMetaProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "vault_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "vault_meta",
        type: "address",
      },
    ],
    name: "setMetaProvider",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006100176001600160e01b0361006616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b61048d806100796000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fc5780638f32d59b14610104578063c823744214610120578063f2fde38b146101465761007d565b806308e670381461008257806310c89070146100c4578063715018a6146100f4575b600080fd5b6100a86004803603602081101561009857600080fd5b50356001600160a01b031661016c565b604080516001600160a01b039092168252519081900360200190f35b6100f2600480360360408110156100da57600080fd5b506001600160a01b0381358116916020013516610187565b005b6100f261021b565b6100a86102cb565b61010c6102da565b604080519115158252519081900360200190f35b6100a86004803603602081101561013657600080fd5b50356001600160a01b03166102fe565b6100f26004803603602081101561015c57600080fd5b50356001600160a01b031661031c565b6001602052600090815260409020546001600160a01b031681565b61018f6102da565b6101e0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b039182166000908152600160205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b6102236102da565b610274576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031690565b600080546001600160a01b03166102ef610381565b6001600160a01b031614905090565b6001600160a01b039081166000908152600160205260409020541690565b6103246102da565b610375576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61037e81610385565b50565b3390565b6001600160a01b0381166103ca5760405162461bcd60e51b81526004018080602001828103825260268152602001806104336026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820c69e6d29dfc7da8731c2cb21fe9a3055d2b240db1c4dce0153d78fc8ed75a3ee64736f6c63430005100032";

type VaultMetaRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultMetaRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultMetaRegistry__factory extends ContractFactory {
  constructor(...args: VaultMetaRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultMetaRegistry> {
    return super.deploy(overrides || {}) as Promise<VaultMetaRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VaultMetaRegistry {
    return super.attach(address) as VaultMetaRegistry;
  }
  override connect(signer: Signer): VaultMetaRegistry__factory {
    return super.connect(signer) as VaultMetaRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultMetaRegistryInterface {
    return new utils.Interface(_abi) as VaultMetaRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultMetaRegistry {
    return new Contract(address, _abi, signerOrProvider) as VaultMetaRegistry;
  }
}
