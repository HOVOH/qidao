/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EQi, EQiInterface } from "../../contracts/EQi";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "Enter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "Leave",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "UpdateMaxLock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "mult",
        type: "uint8",
      },
    ],
    name: "UpdateMultiplier",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "Qi",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "emergencyExit",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "endBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "leave",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bool",
        name: "_trigger",
        type: "bool",
      },
    ],
    name: "setEmergency",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "underlyingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_maxLock",
        type: "uint256",
      },
    ],
    name: "updateMaxLock",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint8",
        name: "_multiplier",
        type: "uint8",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60068054610100600160a81b03191674580a84c73811e1839f75d86d75d88cca0c241ff4001760ff60a81b1916600360a81b1790556303952e8e6007556008805460ff19908116909155600b60809081526a657363726f77656420516960a81b60a052610100604052600360c08181526265516960e81b60e0528154909316600117905590601260006200009262000131565b60038054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508251620000fd90600490602086019062000136565b5081516200011390600590602085019062000136565b506006805460ff191660ff9290921691909117905550620001d89050565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200017957805160ff1916838001178555620001a9565b82800160010185558215620001a9579182015b82811115620001a95782518255916020019190600101906200018c565b50620001b7929150620001bb565b5090565b6200013391905b80821115620001b75760008155600101620001c2565b6118bb80620001e86000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80635641ec03116100ee57806395d89b4111610097578063a9059cbb11610071578063a9059cbb14610260578063d66d9e191461048b578063dd62ed3e14610493578063f2fde38b146104c1576101a3565b806395d89b411461043a578063a457c2d714610442578063a63b75a61461046e576101a3565b806384d0643e116100c857806384d0643e146104065780638da5cb5b1461042a5780638f32d59b14610432576101a3565b80635641ec03146103d057806370a08231146103d8578063715018a6146103fe576101a3565b806323972aef11610150578063395093511161012a578063395093511461035e5780633e6425751461038a5780634d278d59146103b0576101a3565b806323972aef146102e757806323b872dd1461030a578063313ce56714610340576101a3565b8063095ea7b311610181578063095ea7b31461026057806318160ddd146102a05780631959a002146102a8576101a3565b80630501d556146101a857806306fdde03146101c9578063083c632314610246575b600080fd5b6101c7600480360360208110156101be57600080fd5b503515156104e7565b005b6101d1610553565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020b5781810151838201526020016101f3565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024e6105e9565b60408051918252519081900360200190f35b61028c6004803603604081101561027657600080fd5b506001600160a01b0381351690602001356105ff565b604080519115158252519081900360200190f35b61024e610608565b6102ce600480360360208110156102be57600080fd5b50356001600160a01b031661060e565b6040805192835260208301919091528051918290030190f35b6101c7600480360360408110156102fd57600080fd5b5080359060200135610627565b61028c6004803603606081101561032057600080fd5b506001600160a01b0381358116916020810135909116906040013561090e565b610348610917565b6040805160ff9092168252519081900360200190f35b61028c6004803603604081101561037457600080fd5b506001600160a01b038135169060200135610920565b61024e600480360360208110156103a057600080fd5b50356001600160a01b0316610982565b6101c7600480360360208110156103c657600080fd5b503560ff166109a1565b6101c7610a71565b61024e600480360360208110156103ee57600080fd5b50356001600160a01b0316610b0c565b6101c7610bc3565b61040e610c79565b604080516001600160a01b039092168252519081900360200190f35b61040e610c8d565b61028c610ca1565b6101d1610ccc565b61028c6004803603604081101561045857600080fd5b506001600160a01b038135169060200135610d2d565b6101c76004803603602081101561048457600080fd5b5035610d9b565b6101c7610e2f565b61024e600480360360408110156104a957600080fd5b506001600160a01b03813581169160200135166105ff565b6101c7600480360360208110156104d757600080fd5b50356001600160a01b0316610fa6565b6104ef610ca1565b610540576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6008805460ff1916911515919091179055565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105df5780601f106105b4576101008083540402835291602001916105df565b820191906000526020600020905b8154815290600101906020018083116105c257829003601f168201915b5050505050905090565b3360009081526009602052604090206001015490565b60005b92915050565b60025490565b6009602052600090815260409020805460019091015482565b60035460ff1661067e576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6003805460ff191690553360009081526009602052604090206001015415806106b95750336000908152600960205260409020600101544310155b156106d557336000908152600960205260409020436001909101555b6007546106e8904363ffffffff61100816565b3360009081526009602052604090206001015461070b908363ffffffff61100816565b11156107485760405162461bcd60e51b81526004018080602001828103825260388152602001806117dc6038913960400191505060405180910390fd5b600654604080517f70a082310000000000000000000000000000000000000000000000000000000081523360048201529051849261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156107b057600080fd5b505afa1580156107c4573d6000803e3d6000fd5b505050506040513d60208110156107da57600080fd5b505110156108195760405162461bcd60e51b815260040180806020018281038252602d81526020018061178e602d913960400191505060405180910390fd5b811561086d5760065461083c9061010090046001600160a01b0316333085611069565b3360009081526009602052604090205461085c908363ffffffff61100816565b336000908152600960205260409020555b80156108aa5733600090815260096020526040902060010154610896908263ffffffff61100816565b336000908152600960205260409020600101555b33600081815260096020908152604091829020805460019091015483519485529184015282820152517f5087fbec8bdd9b358f62d89babb5f4dd44f8576230a9520c90e3407d6f4dd1fb9181900360600190a150506003805460ff19166001179055565b60009392505050565b60065460ff1690565b600061097961092d6110f7565b84610974856001600061093e6110f7565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61100816565b6110fb565b50600192915050565b6001600160a01b0381166000908152600960205260409020545b919050565b6109a9610ca1565b6109fa576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6006805460ff808416600160a81b9081027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff9093169290921792839055604080519290930416815290517fdf6e453e7c63d98f795b114c63fe37f99a42e0786f4bee1c4d151350c9c2b6389181900360200190a150565b60085460ff16610ac8576040805162461bcd60e51b815260206004820152601660248201527f656d657267656e63793a206e6f7420656e61626c656400000000000000000000604482015290519081900360640190fd5b33600081815260096020526040812080548282556001909101919091556006549091610b099161010090046001600160a01b0316908363ffffffff6111e716565b50565b6001600160a01b03811660009081526009602052604081206001015443101580610b4c57506001600160a01b038216600090815260096020526040902054155b15610b7057506001600160a01b03811660009081526009602052604090205461099c565b6001600160a01b038216600090815260096020526040902054600754610bbc9190610bb0906103e890610ba490818861126c565b9063ffffffff6112bf16565b9063ffffffff61100816565b905061099c565b610bcb610ca1565b610c1c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60035460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36003805474ffffffffffffffffffffffffffffffffffffffff0019169055565b60065461010090046001600160a01b031681565b60035461010090046001600160a01b031690565b60035460009061010090046001600160a01b0316610cbd6110f7565b6001600160a01b031614905090565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105df5780601f106105b4576101008083540402835291602001916105df565b6000610979610d3a6110f7565b84610974856040518060600160405280602581526020016118626025913960016000610d646110f7565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61130116565b610da3610ca1565b610df4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60078190556040805182815290517f9b10ddea032a9d8a729d8ba052b50e4103353ee04b2300550e95cf777ee3ff039181900360200190a150565b60035460ff16610e86576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6003805460ff1916905533600090815260096020526040902060010154431015610ef7576040805162461bcd60e51b815260206004820152601f60248201527f6c656176653a20746f6b656e7320617265207374696c6c206c6f636b65642e00604482015290519081900360640190fd5b33600081815260096020526040902054600654610f29926101009091046001600160a01b03169163ffffffff6111e716565b33600081815260096020908152604091829020805460019091015483519485529184015282820152517f0f0f7f8153c6d63a5696720d4cc434e56bb5ac1cf8c791ed9c180defb6e921539181900360600190a13360009081526009602052604081208181556001908101919091556003805460ff19169091179055565b610fae610ca1565b610fff576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610b0981611398565b600082820183811015611062576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526110f1908590611451565b50505050565b3390565b6001600160a01b0383166111405760405162461bcd60e51b81526004018080602001828103825260248152602001806118146024913960400191505060405180910390fd5b6001600160a01b0382166111855760405162461bcd60e51b815260040180806020018281038252602281526020018061176c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052611267908490611451565b505050565b6006546001600160a01b038216600090815260096020526040812080546001909101549192610602926103e8926112b392600160a81b900460ff1691839190829043611609565b9063ffffffff61164b16565b600061106283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116a4565b600081848411156113905760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561135557818101518382015260200161133d565b50505050905090810190601f1680156113825780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0381166113dd5760405162461bcd60e51b81526004018080602001828103825260268152602001806117466026913960400191505060405180910390fd5b6003546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b611463826001600160a01b0316611709565b6114b4576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b602083106114f25780518252601f1990920191602091820191016114d3565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611554576040519150601f19603f3d011682016040523d82523d6000602084013e611559565b606091505b5091509150816115b0576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b8051156110f1578080602001905160208110156115cc57600080fd5b50516110f15760405162461bcd60e51b815260040180806020018281038252602a815260200180611838602a913960400191505060405180910390fd5b600061106283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611301565b60008261165a57506000610602565b8282028284828161166757fe5b04146110625760405162461bcd60e51b81526004018080602001828103825260218152602001806117bb6021913960400191505060405180910390fd5b600081836116f35760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561135557818101518382015260200161133d565b5060008385816116ff57fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061173d57508115155b94935050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373656e7465723a2062616c616e63654f66286d73672e73656e64657229206c657373207468616e20616d6f756e74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77656e7465723a20626c6f636b4e756d6265722063616e6e6f74206265206d6f7265207468616e20342079656172732066726f6d206e6f772e45524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820f1ce88e5ef15b2d3d325c4185a91bf206574647f88e84e47f7f02254ccd82bab64736f6c63430005100032";

type EQiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EQiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EQi__factory extends ContractFactory {
  constructor(...args: EQiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EQi> {
    return super.deploy(overrides || {}) as Promise<EQi>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EQi {
    return super.attach(address) as EQi;
  }
  override connect(signer: Signer): EQi__factory {
    return super.connect(signer) as EQi__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EQiInterface {
    return new utils.Interface(_abi) as EQiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EQi {
    return new Contract(address, _abi, signerOrProvider) as EQi;
  }
}
