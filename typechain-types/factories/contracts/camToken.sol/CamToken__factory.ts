/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CamToken,
  CamTokenInterface,
} from "../../../contracts/camToken.sol/CamToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "amToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "AaveContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "LENDING_POOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "Token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "claimAaveRewards",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "depositFeeBP",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "harvestMaticIntoToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "leave",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "uni",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint16",
        name: "_depositFee",
        type: "uint16",
      },
    ],
    name: "updateDepositFee",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "updateOperator",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "updateUniV2Router",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "wMatic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200248038038062002480833981810160405260a08110156200003757600080fd5b815160208301516040808501805191519395929483019291846401000000008211156200006357600080fd5b9083019060208201858111156200007957600080fd5b82516401000000008111828201881017156200009457600080fd5b82525081516020918201929091019080838360005b83811015620000c3578181015183820152602001620000a9565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b9083019060208201858111156200012b57600080fd5b82516401000000008111828201881017156200014657600080fd5b82525081516020918201929091019080838360005b83811015620001755781810151838201526020016200015b565b50505050905090810190601f168015620001a35780820380516001836020036101000a031916815260200191505b50604052602090810151855190935085925084918491620001cb9160039190860190620002c6565b508151620001e1906004906020850190620002c6565b506005805460ff191660ff9290921691909117610100600160a81b0319166101006001600160a01b03998a16021790555050600b80546006805473357d51124f59836ded84c8a1730d72b749d8bc236001600160a01b03199182161790915560078054730d500b1d8e8ef31e21c99d1db9a6444d3adf12709083161790556008805473a5e0829caced8ffdd4de3c43696c57f7d7a678ff908316179055600980547386fe8d6d4c8a007353617587988552b6921514cb908316179055908116959096169490941761ffff60a01b19169093555050600a8054909216909155506200036b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200030957805160ff191683800117855562000339565b8280016001018555821562000339579182015b82811115620003395782518255916020019190600101906200031c565b50620003479291506200034b565b5090565b6200036891905b8082111562000347576000815560010162000352565b90565b612105806200037b6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806367dfd4c9116100f9578063a59f3e0c11610097578063b4dcfc7711610071578063b4dcfc77146104e8578063c2412676146104f0578063dd62ed3e146104f8578063edc9af9514610526576101c4565b8063a59f3e0c14610479578063a9059cbb14610496578063ac7475ed146104c2576101c4565b80637f51bb1f116100d35780637f51bb1f146103fe5780638aab7d1c1461042457806395d89b4114610445578063a457c2d71461044d576101c4565b806367dfd4c9146103b357806370a08231146103d057806372ff2f7f146103f6576101c4565b806339509351116101665780634e33df86116101405780634e33df861461035e57806354747a7014610384578063570ca735146103a357806361d027b3146103ab576101c4565b806339509351146103065780633c81fdb4146103325780633e413bee14610356576101c4565b806319f7a841116101a257806319f7a841146102a057806323b872dd146102aa578063313ce567146102e0578063377d7c9f146102fe576101c4565b806306fdde03146101c9578063095ea7b31461024657806318160ddd14610286575b600080fd5b6101d161052e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020b5781810151838201526020016101f3565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102726004803603604081101561025c57600080fd5b506001600160a01b0381351690602001356105c4565b604080519115158252519081900360200190f35b61028e6105e2565b60408051918252519081900360200190f35b6102a86105e8565b005b610272600480360360608110156102c057600080fd5b506001600160a01b03813581169160208101359091169060400135610a01565b6102e8610a8e565b6040805160ff9092168252519081900360200190f35b6102a8610a97565b6102726004803603604081101561031c57600080fd5b506001600160a01b038135169060200135610d2b565b61033a610d7f565b604080516001600160a01b039092168252519081900360200190f35b61033a610d8e565b6102a86004803603602081101561037457600080fd5b50356001600160a01b0316610d9d565b61038c610e2b565b6040805161ffff9092168252519081900360200190f35b61033a610e3c565b61033a610e4b565b6102a8600480360360208110156103c957600080fd5b5035610e5a565b61028e600480360360208110156103e657600080fd5b50356001600160a01b0316610fd3565b61033a610fee565b6102a86004803603602081101561041457600080fd5b50356001600160a01b0316610ffd565b6102a86004803603602081101561043a57600080fd5b503561ffff1661108b565b6101d1611126565b6102726004803603604081101561046357600080fd5b506001600160a01b038135169060200135611187565b6102a86004803603602081101561048f57600080fd5b50356111f5565b610272600480360360408110156104ac57600080fd5b506001600160a01b038135169060200135611443565b6102a8600480360360208110156104d857600080fd5b50356001600160a01b0316611457565b61033a6114e5565b61033a6114fd565b61028e6004803603604081101561050e57600080fd5b506001600160a01b0381358116916020013516611511565b61033a61153c565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b5050505050905090565b60006105d86105d161154b565b848461154f565b5060015b92915050565b60025490565b600a546001600160a01b0316158061060a5750600a546001600160a01b031633145b61065b576040805162461bcd60e51b815260206004820152601960248201527f6f6e6c794f70657261746f723a206e6f7420616c6c6f77656400000000000000604482015290519081900360640190fd5b600754604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156106a657600080fd5b505afa1580156106ba573d6000803e3d6000fd5b505050506040513d60208110156106d057600080fd5b5051905060028111156109fe576040805160028082526060808301845292602083019080388339505060075482519293506001600160a01b03169183915060009061071757fe5b6001600160a01b039283166020918202929092010152600b5482519116908290600190811061074257fe5b6001600160a01b039283166020918202929092010152600854600754610774929081169116600063ffffffff61163b16565b600854600754610797916001600160a01b0391821691168463ffffffff61163b16565b6008546001600160a01b03166338ed173983600084306107bf4261070863ffffffff61179516565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610838578181015183820152602001610820565b505050509050019650505050505050600060405180830381600087803b15801561086157600080fd5b505af1158015610875573d6000803e3d6000fd5b5050600b54604080516370a0823160e01b81523060048201529051600094506001600160a01b0390921692506370a08231916024808301926020929190829003018186803b1580156108c657600080fd5b505afa1580156108da573d6000803e3d6000fd5b505050506040513d60208110156108f057600080fd5b5051600b54909150610927906001600160a01b0316738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf600063ffffffff61163b16565b600b54610958906001600160a01b0316738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf8363ffffffff61163b16565b600b54604080517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b039092166004830152602482018390523060448301526000606483018190529051738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf9263e8eda9df92608480830193919282900301818387803b1580156109e357600080fd5b505af11580156109f7573d6000803e3d6000fd5b5050505050505b50565b6000610a0e8484846117f6565b610a8484610a1a61154b565b610a7f85604051806060016040528060288152602001611fba602891396001600160a01b038a16600090815260016020526040812090610a5861154b565b6001600160a01b03168152602081019190915260400160002054919063ffffffff61195216565b61154f565b5060019392505050565b60055460ff1690565b600a546001600160a01b03161580610ab95750600a546001600160a01b031633145b610b0a576040805162461bcd60e51b815260206004820152601960248201527f6f6e6c794f70657261746f723a206e6f7420616c6c6f77656400000000000000604482015290519081900360640190fd5b60408051600180825281830190925260609160208083019080388339019050509050600560019054906101000a90046001600160a01b031681600081518110610b4f57fe5b6001600160a01b03928316602091820292909201810191909152600654604080517f8b599f260000000000000000000000000000000000000000000000000000000081523060248201819052600482019283528651604483015286516000969490941694638b599f269488949293839260649091019186820191028083838c5b83811015610be7578181015183820152602001610bcf565b50505050905001935050505060206040518083038186803b158015610c0b57600080fd5b505afa158015610c1f573d6000803e3d6000fd5b505050506040513d6020811015610c3557600080fd5b505190506002811115610d27576006546040517f3111e7b30000000000000000000000000000000000000000000000000000000081526024810183905230604482018190526060600483019081528551606484015285516001600160a01b0390941693633111e7b393879387939092909182916084909101906020808801910280838360005b83811015610cd3578181015183820152602001610cbb565b50505050905001945050505050602060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b505050506040513d6020811015610d2457600080fd5b50505b5050565b60006105d8610d3861154b565b84610a7f8560016000610d4961154b565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61179516565b6007546001600160a01b031681565b600b546001600160a01b031681565b6009546001600160a01b03163314610dfc576040805162461bcd60e51b815260206004820152601f60248201527f757064617465556e695632526f757465723a206e6f7420616c6c6f7765642e00604482015290519081900360640190fd5b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b54600160a01b900461ffff1681565b600a546001600160a01b031681565b6009546001600160a01b031681565b80156109fe576000610e6a6105e2565b90506000610f2582610f19600560019054906101000a90046001600160a01b03166001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610ee057600080fd5b505afa158015610ef4573d6000803e3d6000fd5b505050506040513d6020811015610f0a57600080fd5b5051869063ffffffff6119e916565b9063ffffffff611a4216565b9050610f313384611a84565b600554604080517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810184905290516101009092046001600160a01b03169163a9059cbb916044808201926020929091908290030181600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b505050506040513d6020811015610fcc57600080fd5b5050505050565b6001600160a01b031660009081526020819052604090205490565b6006546001600160a01b031681565b6009546001600160a01b0316331461105c576040805162461bcd60e51b815260206004820152601c60248201527f75706461746554726561737572793a206e6f7420616c6c6f7765642e00000000604482015290519081900360640190fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6009546001600160a01b031633146110ea576040805162461bcd60e51b815260206004820152601e60248201527f7570646174654465706f7369744665653a206e6f7420616c6c6f7765642e0000604482015290519081900360640190fd5b600b805461ffff909216600160a01b027fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105ba5780601f1061058f576101008083540402835291602001916105ba565b60006105d861119461154b565b84610a7f856040518060600160405280602581526020016120ac60259139600160006111be61154b565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff61195216565b600554604080516370a0823160e01b8152306004820152905160009261010090046001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561124557600080fd5b505afa158015611259573d6000803e3d6000fd5b505050506040513d602081101561126f57600080fd5b50519050600061127d6105e2565b600554604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810187905290519293506101009091046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b1580156112f757600080fd5b505af115801561130b573d6000803e3d6000fd5b505050506040513d602081101561132157600080fd5b505080158061132e575081155b156113b157600b54600160a01b900461ffff16156113a257600b5460009061136a9061271090610f19908790600160a01b900461ffff166119e9565b600954909150611383906001600160a01b031682611b80565b61139c33611397868463ffffffff611c7016565b611b80565b506113ac565b6113ac3384611b80565b61143e565b60006113c783610f19868563ffffffff6119e916565b600b54909150600160a01b900461ffff161561143457600b546000906114019061271090610f19908590600160a01b900461ffff166119e9565b60095490915061141a906001600160a01b031682611b80565b61142e33611397848463ffffffff611c7016565b50610d24565b610d243382611b80565b505050565b60006105d861145061154b565b84846117f6565b6009546001600160a01b031633146114b6576040805162461bcd60e51b815260206004820152601c60248201527f7570646174654f70657261746f723a206e6f7420616c6c6f7765642e00000000604482015290519081900360640190fd5b600a805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf81565b60055461010090046001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6008546001600160a01b031681565b3390565b6001600160a01b0383166115945760405162461bcd60e51b81526004018080602001828103825260248152602001806120286024913960400191505060405180910390fd5b6001600160a01b0382166115d95760405162461bcd60e51b8152600401808060200182810382526022815260200180611f516022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8015806116da5750604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b1580156116ac57600080fd5b505afa1580156116c0573d6000803e3d6000fd5b505050506040513d60208110156116d657600080fd5b5051155b6117155760405162461bcd60e51b81526004018080602001828103825260368152602001806120766036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905261143e908490611cb2565b6000828201838110156117ef576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b03831661183b5760405162461bcd60e51b81526004018080602001828103825260258152602001806120036025913960400191505060405180910390fd5b6001600160a01b0382166118805760405162461bcd60e51b8152600401808060200182810382526023815260200180611f0c6023913960400191505060405180910390fd5b6118c381604051806060016040528060268152602001611f73602691396001600160a01b038616600090815260208190526040902054919063ffffffff61195216565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546118f8908263ffffffff61179516565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156119e15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119a657818101518382015260200161198e565b50505050905090810190601f1680156119d35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000826119f8575060006105dc565b82820282848281611a0557fe5b04146117ef5760405162461bcd60e51b8152600401808060200182810382526021815260200180611f996021913960400191505060405180910390fd5b60006117ef83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611e6a565b6001600160a01b038216611ac95760405162461bcd60e51b8152600401808060200182810382526021815260200180611fe26021913960400191505060405180910390fd5b611b0c81604051806060016040528060228152602001611f2f602291396001600160a01b038516600090815260208190526040902054919063ffffffff61195216565b6001600160a01b038316600090815260208190526040902055600254611b38908263ffffffff611c7016565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b038216611bdb576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254611bee908263ffffffff61179516565b6002556001600160a01b038216600090815260208190526040902054611c1a908263ffffffff61179516565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006117ef83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611952565b611cc4826001600160a01b0316611ecf565b611d15576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611d535780518252601f199092019160209182019101611d34565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611db5576040519150601f19603f3d011682016040523d82523d6000602084013e611dba565b606091505b509150915081611e11576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610d2457808060200190516020811015611e2d57600080fd5b5051610d245760405162461bcd60e51b815260040180806020018281038252602a81526020018061204c602a913960400191505060405180910390fd5b60008183611eb95760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156119a657818101518382015260200161198e565b506000838581611ec557fe5b0495945050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611f0357508115155b94935050505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158200df4c33b0b742c0a5404a8a7460d3b18e2224cdad5d6b4a0a7df619a38f55be564736f6c63430005100032";

type CamTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CamTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CamToken__factory extends ContractFactory {
  constructor(...args: CamTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    amToken: string,
    underlying: string,
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CamToken> {
    return super.deploy(
      amToken,
      underlying,
      name,
      symbol,
      decimals,
      overrides || {}
    ) as Promise<CamToken>;
  }
  override getDeployTransaction(
    amToken: string,
    underlying: string,
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      amToken,
      underlying,
      name,
      symbol,
      decimals,
      overrides || {}
    );
  }
  override attach(address: string): CamToken {
    return super.attach(address) as CamToken;
  }
  override connect(signer: Signer): CamToken__factory {
    return super.connect(signer) as CamToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CamTokenInterface {
    return new utils.Interface(_abi) as CamTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CamToken {
    return new Contract(address, _abi, signerOrProvider) as CamToken;
  }
}
