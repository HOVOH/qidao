/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleRegistry,
  SimpleRegistryInterface,
} from "../../../contracts/registry.sol/SimpleRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "_registry",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "record",
        type: "string",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600180546001600160a01b0319163317905561064c806100326000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063704b6c0211610050578063704b6c02146100aa578063c67cd4b0146100bf578063e942b516146100d257610067565b806301bc45c91461006c578063461a44781461008a575b600080fd5b6100746100e5565b6040516100819190610517565b60405180910390f35b61009d61009836600461045f565b6100f4565b604051610081919061052b565b6100bd6100b8366004610431565b6101a4565b005b61009d6100cd36600461045f565b610211565b6100bd6100e036600461049a565b6102b6565b6001546001600160a01b031681565b606060008260405161010691906104fb565b9081526020016040518091039020805461011f906105c5565b80601f016020809104026020016040519081016040528092919081815260200182805461014b906105c5565b80156101985780601f1061016d57610100808354040283529160200191610198565b820191906000526020600020905b81548152906001019060200180831161017b57829003601f168201915b50505050509050919050565b6001546001600160a01b031633146101d75760405162461bcd60e51b81526004016101ce9061055e565b60405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b805160208183018101805160008252928201919093012091528054610235906105c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610261906105c5565b80156102ae5780601f10610283576101008083540402835291602001916102ae565b820191906000526020600020905b81548152906001019060200180831161029157829003601f168201915b505050505081565b6001546001600160a01b031633146102e05760405162461bcd60e51b81526004016101ce9061055e565b806000836040516102f191906104fb565b90815260200160405180910390209080519060200190610312929190610317565b505050565b828054610323906105c5565b90600052602060002090601f016020900481019282610345576000855561038b565b82601f1061035e57805160ff191683800117855561038b565b8280016001018555821561038b579182015b8281111561038b578251825591602001919060010190610370565b5061039792915061039b565b5090565b5b80821115610397576000815560010161039c565b600082601f8301126103c0578081fd5b813567ffffffffffffffff808211156103db576103db610600565b604051601f8301601f1916810160200182811182821017156103ff576103ff610600565b604052828152848301602001861015610416578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610442578081fd5b81356001600160a01b0381168114610458578182fd5b9392505050565b600060208284031215610470578081fd5b813567ffffffffffffffff811115610486578182fd5b610492848285016103b0565b949350505050565b600080604083850312156104ac578081fd5b823567ffffffffffffffff808211156104c3578283fd5b6104cf868387016103b0565b935060208501359150808211156104e4578283fd5b506104f1858286016103b0565b9150509250929050565b6000825161050d818460208701610595565b9190910192915050565b6001600160a01b0391909116815260200190565b600060208252825180602084015261054a816040850160208701610595565b601f01601f19169190910160400192915050565b60208082526015908201527f6f6e6c7941646d696e3a204f6e6c792061646d696e0000000000000000000000604082015260600190565b60005b838110156105b0578181015183820152602001610598565b838111156105bf576000848401525b50505050565b6002810460018216806105d957607f821691505b602082108114156105fa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f4f387da94da5e95645f5daf3b9e90cc90fa82081cf399be7c9a7a1efa23fd3964736f6c63430008000033";

type SimpleRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleRegistry__factory extends ContractFactory {
  constructor(...args: SimpleRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleRegistry> {
    return super.deploy(overrides || {}) as Promise<SimpleRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleRegistry {
    return super.attach(address) as SimpleRegistry;
  }
  override connect(signer: Signer): SimpleRegistry__factory {
    return super.connect(signer) as SimpleRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleRegistryInterface {
    return new utils.Interface(_abi) as SimpleRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleRegistry {
    return new Contract(address, _abi, signerOrProvider) as SimpleRegistry;
  }
}
